main
num
<<<<<<< Updated upstream
V_secret
,
num
V_current
,
begin
print
"Secret"
;
V_secret
<
input
;
F_next
(
0
,
0
,
0
)
;
end
void
F_next
=======
V_x
,
num
V_y
,
text
V_message
,
begin
V_x
<
input
;
V_x
=
not
(
V_x
)
;
V_y
=
add
(
V_x
,
5
)
;
V_message
=
"Hello"
;
if
div
(
add
(
3
,
4
)
,
grt
(
3
,
4
)
)
then
begin
print
V_message
;
print
V_y
;
end
else
begin
V_y
=
mul
(
V_y
,
2
)
;
print
V_y
;
end
;
F_calculate
(
V_x
,
V_y
,
V_message
)
;
end
num
F_calculate
>>>>>>> Stashed changes
(
V_a
,
V_b
,
<<<<<<< Updated upstream
V_c
)
{
num
V_d
,
num
V_e
,
num
V_f
,
begin
F_guess
(
0
,
0
,
0
=======
V_msg
)
{
num
V_t
,
num
V_temp
,
text
V_output
,
begin
V_temp
=
add
(
V_a
,
V_b
)
;
V_t
=
div
(
V_temp
,
2
>>>>>>> Stashed changes
)
;
if
eq
(
<<<<<<< Updated upstream
V_current
,
V_secret
)
then
begin
print
"Correct"
=======
V_t
,
10
)
then
begin
V_output
=
"Equal"
>>>>>>> Stashed changes
;
end
else
begin
<<<<<<< Updated upstream
F_next
(
0
,
0
,
0
)
;
end
;
=======
V_output
=
"Notequal"
;
end
;
print
V_msg
;
print
V_output
;
print
V_t
;
F_calculate
(
V_t
,
V_y
,
V_message
)
;
return
V_t
;
>>>>>>> Stashed changes
end
}
end
